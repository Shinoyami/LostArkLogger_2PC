/*
 * This file has been Auto Generated, Please do not edit.
 * If you need changes, follow the instructions written in the readme.md
 *
 * Generated by Herysia.
 */

using System;
using System.Collections.Generic;
using LostArkLogger.Types;

namespace LostArkLogger
{
    public class StatusEffectData
    {
        public bool valid = false;
        internal StatusEffectData()
        {
            //Made for conditional structures
        }

        internal StatusEffectData(BitReader reader)
        {
            valid = true;
            lostArkDateTime = new LostArkDateTime(reader);
            Unk1 = reader.ReadInt32();
            Unk2 = reader.ReadByte();
            EffectInstanceId = reader.ReadUInt32();
            hasValue = reader.ReadBool();
            if(hasValue)
            {
                Value = reader.ReadBytes(16);
            }
            Unk5 = reader.ReadByte();
            if(Unk5 == 1)
            {
                Unk5_0 = reader.ReadInt64();
            }
            StatusEffectId = reader.ReadUInt32();
            SourceId = reader.ReadUInt64();
            SkillLevel = reader.ReadByte();
            struct_423 = new Struct_423(reader);
            InstanceId = reader.ReadUInt64();
        }

        public LostArkDateTime lostArkDateTime { get; } = new LostArkDateTime();
        public int Unk1 { get; }
        public byte Unk2 { get; }
        public uint EffectInstanceId { get; }
        public bool hasValue { get; }
        public byte[] Value { get; }
        public byte Unk5 { get; }
        public long Unk5_0 { get; }
        public uint StatusEffectId { get; }
        public ulong SourceId { get; }
        public byte SkillLevel { get; }
        public Struct_423 struct_423 { get; } = new Struct_423();
        public ulong InstanceId { get; }
    }
}